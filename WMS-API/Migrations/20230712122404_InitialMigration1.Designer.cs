// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WMS_API.Data;

#nullable disable

namespace WMS_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230712122404_InitialMigration1")]
    partial class InitialMigration1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WMS_API.Models.Domain.Bin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AreaCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("BinSize")
                        .HasColumnType("integer");

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longtitude")
                        .HasColumnType("double precision");

                    b.Property<Guid>("binStatusId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("binStatusId");

                    b.ToTable("bins");
                });

            modelBuilder.Entity("WMS_API.Models.Domain.BinStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("WasteStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("binStatuses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d6de91d5-d9c3-4f8a-bc16-8d844779a715"),
                            WasteStatus = "Bin Is Empty"
                        },
                        new
                        {
                            Id = new Guid("9d8c0470-1143-4a7d-b793-2ff85ad3d6df"),
                            WasteStatus = "Bin is Half-filled"
                        },
                        new
                        {
                            Id = new Guid("ae6638f6-2a49-44ee-8dee-a906c99e5f0c"),
                            WasteStatus = "Bin if Full"
                        });
                });

            modelBuilder.Entity("WMS_API.Models.Domain.WCollector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("wCollectors");
                });

            modelBuilder.Entity("WMS_API.Models.Domain.Bin", b =>
                {
                    b.HasOne("WMS_API.Models.Domain.BinStatus", "binStatus")
                        .WithMany()
                        .HasForeignKey("binStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("binStatus");
                });
#pragma warning restore 612, 618
        }
    }
}
